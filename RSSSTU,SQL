with SPAIDEN as
(
    SELECT
        SPRIDEN.SPRIDEN_ID as SPRIDEN_ID,
        SPRIDEN.SPRIDEN_PIDM as SPRIDEN_PIDM,
        SPRIDEN.SPRIDEN_LAST_NAME as SPRIDEN_LAST_NAME,
        SPRIDEN.SPRIDEN_FIRST_NAME as SPRIDEN_FIRST_NAME,
        SPRIDEN.SPRIDEN_MI as SPRIDEN_MI,
        SPRIDEN.SPRIDEN_SEARCH_LAST_NAME as SPRIDEN_SEARCH_LAST_NAME,
        SPRIDEN.SPRIDEN_SEARCH_FIRST_NAME as SPRIDEN_SEARCH_FIRST_NAME,
        SPRIDEN.SPRIDEN_SEARCH_MI as SPRIDEN_SEARCH_MI,
        f_format_name(SPRIDEN.SPRIDEN_PIDM, 'LFMI') as SPRIDEN_LEGAL_NAME        

    FROM
        SPRIDEN SPRIDEN

    WHERE
        SPRIDEN_NTYP_CODE IS NULL
        AND SPRIDEN_CHANGE_IND IS NULL
    ),

SPAPERS as
(
    SELECT
        SPBPERS.SPBPERS_PIDM,
        SPBPERS.SPBPERS_SSN,
        SPBPERS.SPBPERS_BIRTH_DATE,
        SPBPERS.SPBPERS_SEX,
        SPBPERS.SPBPERS_PREF_FIRST_NAME,
        SPBPERS.SPBPERS_CITZ_CODE,
        SPBPERS_ETHN_CDE,
        CASE
            WHEN SPBPERS.SPBPERS_CITZ_CODE = 'Y' THEN 'United States'
            ELSE (SELECT STVNATN_NATION
                 FROM STVNATN
                 WHERE STVNATN_CODE = NVL(GOBINTL.GOBINTL_NATN_CODE_LEGAL, GOBINTL.GOBINTL_NATN_CODE_BIRTH))
            END AS SPBPERS_CITZ_COUNTRY,
        SPBPERS.SPBPERS_GNDR_CODE

   FROM
        SPBPERS SPBPERS
        LEFT OUTER JOIN GOBINTL GOBINTL ON GOBINTL.GOBINTL_PIDM = SPBPERS.SPBPERS_PIDM
   ),

GOARACE as
(
    SELECT
        GORPRAC.GORPRAC_PIDM,
        GORPRAC.GORPRAC_RACE_CDE,
        (LISTAGG(GORPRAC.GORPRAC_RACE_CDE,', ') WITHIN GROUP (ORDER BY GORPRAC.GORPRAC_RACE_CDE)) as GORRACE_RACE_CDE,
        (LISTAGG(GORRACE.GORRACE_DESC,', ') WITHIN GROUP (ORDER BY GORRACE.GORRACE_DESC)) as GORRACE_DESC

    FROM
        GORPRAC GORPRAC
        LEFT OUTER JOIN GORRACE GORRACE ON GORRACE.GORRACE_RACE_CDE = GORPRAC.GORPRAC_RACE_CDE

    GROUP BY
        GORPRAC.GORPRAC_PIDM,
        GORPRAC.GORPRAC_RACE_CDE
    ),

TUIADDR as (
    SELECT
        SPRADDR.SPRADDR_PIDM,
        SPRADDR.SPRADDR_ATYP_CODE,
        SPRADDR.SPRADDR_SEQNO,
        SPRADDR.SPRADDR_FROM_DATE,
        SPRADDR.SPRADDR_TO_DATE,
        SPRADDR.SPRADDR_STREET_LINE1,
        SPRADDR.SPRADDR_STREET_LINE2,
        SPRADDR.SPRADDR_STREET_LINE3,
        SPRADDR.SPRADDR_CITY,
        SPRADDR.SPRADDR_STAT_CODE,
        SPRADDR.SPRADDR_ZIP,
        SPRADDR.SPRADDR_CNTY_CODE,
        f_get_desc_fnc('STVCNTY', SPRADDR.SPRADDR_ATYP_CODE, 30) as SPRADDR_ATYP_DESC,
        f_get_desc_fnc('STVCNTY', SPRADDR.SPRADDR_CNTY_CODE, 30) as SPRADDR_CNTY_DESC

    FROM
        SPRADDR SPRADDR

    WHERE
        SPRADDR.SPRADDR_ATYP_CODE IN ('MA','PA','PR')
        AND SPRADDR.SPRADDR_STATUS_IND IS NULL
        AND SPRADDR.SPRADDR_ATYP_CODE = 'PR'
        AND SPRADDR.SPRADDR_VERSION = (SELECT MAX(SPRADDR_VERSION)
                                      FROM SPRADDR SPRADDRX
                                      WHERE SPRADDRX.SPRADDR_PIDM = SPRADDR.SPRADDR_PIDM
                                      AND SPRADDRX.SPRADDR_ATYP_CODE IN ('MA','PA','PR')
                                      AND SPRADDRX.SPRADDR_STATUS_IND IS NULL)
        AND SPRADDR.SPRADDR_SURROGATE_ID = (SELECT MAX(SPRADDR_SURROGATE_ID)
                                           FROM SPRADDR SPRADDRX
                                           WHERE SPRADDRX.SPRADDR_PIDM = SPRADDR.SPRADDR_PIDM
                                           AND SPRADDRX.SPRADDR_ATYP_CODE IN ('MA','PA','PR')
                                           AND SPRADDRX.SPRADDR_STATUS_IND IS NULL)
    ),

SPATELE as (

    SELECT
        SPRTELE.SPRTELE_PIDM as SPRTELE_PIDM,
        SPRTELE.SPRTELE_TELE_CODE as SPRTELE_TELE_CODE,
        SPRTELE.SPRTELE_PHONE_AREA as SPRTELE_PHONE_AREA,
        SPRTELE.SPRTELE_PHONE_NUMBER as SPRTELE_PHONE_NUMBER,
        SPRTELE.SPRTELE_SURROGATE_ID as SPRTELE_SURROGATE_ID,
        SPRTELE.SPRTELE_VERSION as SPRTELE_VERSION,
        f_get_desc_fnc('STVTELE', SPRTELE.SPRTELE_TELE_CODE, 30) as SPRTELE_TELE_DESC

    FROM
        SPRTELE SPRTELE

    WHERE
         SPRTELE.SPRTELE_SURROGATE_ID = (SELECT MAX(SPRTELE_SURROGATE_ID)
                                        FROM SPRTELE SPRTELEX
                                        WHERE SPRTELEX.SPRTELE_PIDM = SPRTELE.SPRTELE_PIDM
                                        AND SPRTELEX.SPRTELE_STATUS_IND IS NULL)
    ),
    
SOREMAL as
(
    select
        GOREMAL.GOREMAL_PIDM,
        GOREMAL.GOREMAL_EMAL_CODE,
        GOREMAL.GOREMAL_EMAIL_ADDRESS,
        GOREMAL.GOREMAL_STATUS_IND,
        GOREMAL.GOREMAL_PREFERRED_IND,
        GORADID.GORADID_PIDM,
        GORADID.GORADID_ADDITIONAL_ID,
        GORADID.GORADID_ADID_CODE,
        GOBTPAC_EXTERNAL_USER --esfid

    FROM
        GOREMAL GOREMAL

        LEFT OUTER JOIN GORADID GORADID ON GORADID.GORADID_PIDM = GOREMAL.GOREMAL_PIDM
             AND GORADID.GORADID_ADID_CODE = 'SUID'
        LEFT OUTER JOIN GOBUMAP GOBUMAP ON GOBUMAP.GOBUMAP_PIDM = GOREMAL.GOREMAL_PIDM
        LEFT OUTER JOIN GOBTPAC GOBTPAC ON GOBTPAC.GOBTPAC_PIDM = GOREMAL.GOREMAL_PIDM

    WHERE
        GOREMAL.GOREMAL_EMAL_CODE = 'SU'
        AND GOREMAL.GOREMAL_STATUS_IND = 'A'
        AND GOREMAL.GOREMAL_PREFERRED_IND = 'Y'
        AND GORADID.GORADID_ADID_CODE = 'SUID'
    ),

SGASTDN as
(
    SELECT
        SGBSTDN.SGBSTDN_PIDM as SGBSTDN_PIDM,
        SGBSTDN.SGBSTDN_TERM_CODE_EFF as SGBSTDN_TERM_CODE_EFF,
        SGBSTDN.SGBSTDN_STST_CODE as SGBSTDN_STST_CODE,
        SGBSTDN.SGBSTDN_LEVL_CODE as SGBSTDN_LEVL_CODE,
        SGBSTDN.SGBSTDN_STYP_CODE as SGBSTDN_STYP_CODE,
        SGBSTDN.SGBSTDN_TERM_CODE_MATRIC as SGBSTDN_TERM_CODE_MATRIC,
        SGBSTDN.SGBSTDN_TERM_CODE_ADMIT as SGBSTDN_TERM_CODE_ADMIT,
        SGBSTDN.SGBSTDN_EXP_GRAD_DATE as SGBSTDN_EXP_GRAD_DATE,
        SGBSTDN.SGBSTDN_CAMP_CODE as SGBSTDN_CAMP_CODE,
        SGBSTDN.SGBSTDN_COLL_CODE_1 as SGBSTDN_COLL_CODE_1,
        SGBSTDN.SGBSTDN_DEGC_CODE_1 as SGBSTDN_DEGC_CODE_1,
        SGBSTDN.SGBSTDN_MAJR_CODE_1 as SGBSTDN_MAJR_CODE_1,
        SGBSTDN.SGBSTDN_MAJR_CODE_MINR_1 as SGBSTDN_MAJR_CODE_MINR_1,
        SGBSTDN.SGBSTDN_MAJR_CODE_MINR_1_2 as SGBSTDN_MAJR_CODE_MINR_1_2,
        SGBSTDN.SGBSTDN_MAJR_CODE_CONC_1 as SGBSTDN_MAJR_CODE_CONC_1,
        SGBSTDN.SGBSTDN_RESD_CODE as SGBSTDN_RESD_CODE,
        SGBSTDN.SGBSTDN_ADMT_CODE as SGBSTDN_ADMT_CODE,
        SGBSTDN.SGBSTDN_DEPT_CODE as SGBSTDN_DEPT_CODE,
        SGBSTDN.SGBSTDN_PROGRAM_1 as SGBSTDN_PROGRAM_1,
        SGBSTDN.SGBSTDN_TERM_CODE_GRAD as SGBSTDN_TERM_CODE_GRAD,
        SGBSTDN.SGBSTDN_ACTIVITY_DATE as SGBSTDN_ACTIVITY_DATE,
        f_class_calc_fnc(SGBSTDN.SGBSTDN_PIDM, SGBSTDN.SGBSTDN_LEVL_CODE, SGBSTDN.SGBSTDN_TERM_CODE_EFF) as SGBSTDN_CLAS_CODE,
        f_Get_desc_fnc('STVSTST',SGBSTDN.SGBSTDN_STST_CODE, 30) as SGBSTDN_STST_DESC,
        f_Get_desc_fnc('STVLEVL', SGBSTDN.SGBSTDN_LEVL_CODE, 30) as SGBSTDN_LEVL_DESC,
        f_Get_desc_fnc('STVSTYP', SGBSTDN.SGBSTDN_STYP_CODE, 30) as SGBSTDN_STYP_DESC,
        f_Get_desc_fnc('STVDEGC', SGBSTDN.SGBSTDN_DEGC_CODE_1, 30) as SGBSTDN_DEGC_DESC,
        f_Get_desc_fnc('STVMAJR', SGBSTDN.SGBSTDN_MAJR_CODE_1, 30) as SGBSTDN_MAJR_DESC,
        f_Get_desc_fnc('STVMAJR', SGBSTDN.SGBSTDN_MAJR_CODE_MINR_1, 30) as SGBSTDN_MINR_1_DESC,
        f_Get_desc_fnc('STVMAJR', SGBSTDN.SGBSTDN_MAJR_CODE_MINR_1_2, 30) as SGBSTDN_MINR_1_2_DESC,
        f_Get_desc_fnc('STVMAJR', SGBSTDN.SGBSTDN_MAJR_CODE_CONC_1, 30) as SGBSTDN_CONC_DESC,
        f_Get_desc_fnc('STVRESD', SGBSTDN.SGBSTDN_RESD_CODE, 30) as SGBSTDN_RESD_DESC,
        f_Get_desc_fnc('STVADMT', SGBSTDN.SGBSTDN_ADMT_CODE, 30) as SGBSTDN_ADMT_DESC,
        f_Get_desc_fnc('STVDEPT', SGBSTDN.SGBSTDN_DEPT_CODE, 30) as SGBSTDN_DEPT_DESC,
        f_Get_desc_fnc('STVTERM', SGBSTDN.SGBSTDN_TERM_CODE_MATRIC, 30) as SGBSTDN_MATRIC_TERM_DESC,
        f_Get_desc_fnc('STVTERM', SGBSTDN.SGBSTDN_TERM_CODE_GRAD, 30) as SGBSTDN_GRAD_TERM_DESC,
        f_Get_desc_fnc('STVCLAS', f_class_calc_fnc(SGBSTDN.SGBSTDN_PIDM,SGBSTDN.SGBSTDN_LEVL_CODE, SGBSTDN.SGBSTDN_TERM_CODE_EFF), 30) as SGBSTDN_CLAS_DESC

   FROM
        SGBSTDN SGBSTDN
   ),

SGAADVR as
(
    SELECT
        SGRADVR.SGRADVR_PIDM,
--        f_format_name(SGRADVR.SGRADVR_PIDM, 'LF30') as SGRADVR_NAME,
        SGRADVR.SGRADVR_TERM_CODE_EFF,
        SGRADVR.SGRADVR_ADVR_PIDM,
        SGRADVR.SGRADVR_ADVR_CODE,
        SGRADVR.SGRADVR_PRIM_IND as SGRADVR_PRIM_IND,
        SGRADVR.SGRADVR_ACTIVITY_DATE as SGRADVR_ACTIVITY_DATE,
        SGRADVR.SGRADVR_SURROGATE_ID as SGRADVR_SURROGATE_ID,
        f_format_name(SGRADVR.SGRADVR_ADVR_PIDM, 'LF30') as SGRADVR_ADVR_NAME,        
        f_get_desc_fnc('STVADVR', SGRADVR_ADVR_CODE , 30) as SGRADVR_ADVR_DESC        

    FROM
        SGRADVR SGRADVR

    WHERE
        SGRADVR.SGRADVR_PRIM_IND = 'Y'
        AND SGRADVR.SGRADVR_TERM_CODE_EFF = (SELECT MAX(SGRADVR_TERM_CODE_EFF)
                                            FROM SGRADVR SGRADVRX
                                            WHERE SGRADVRX.SGRADVR_PIDM = SGRADVR.SGRADVR_PIDM
                                            AND SGRADVRX.SGRADVR_PRIM_IND = 'Y')
        AND SGRADVR.SGRADVR_SURROGATE_ID = (SELECT MAX(SGRADVR_SURROGATE_ID)
                                           FROM SGRADVR SGRADVRX
                                           WHERE SGRADVRX.SGRADVR_PIDM = SGRADVR.SGRADVR_PIDM
                                           AND SGRADVRX.SGRADVR_TERM_CODE_EFF = SGRADVR.SGRADVR_TERM_CODE_EFF
                                           AND SGRADVRX.SGRADVR_PRIM_IND = 'Y')
   ),

SHAGPAR as
(
    SELECT
        CASE
            WHEN SFRTHST.SFRTHST_TMST_CODE IS NOT NULL THEN SFRTHST.SFRTHST_TMST_CODE
            WHEN SHRTGPA.SHRTGPA_HOURS_ATTEMPTED >= 12 THEN 'FT'
              ELSE 'PT'
                END AS SFRTHST_ENROLLEMENT,
        SFRTHST.SFRTHST_TERM_CODE as SFRTHST_TERM_CODE,
        SHRTGPA.SHRTGPA_PIDM as SHRTGPA_PIDM,
        SHRTGPA.SHRTGPA_LEVL_CODE as SHRTGPA_LEVL_CODE,
        SHRTGPA.SHRTGPA_GPA_TYPE_IND as SHRTGPA_GPA_TYPE_IND,
        SHRTGPA.SHRTGPA_TERM_CODE as SHRTGPA_TERM_CODE,
        SHRTGPA.SHRTGPA_HOURS_ATTEMPTED as SHRTGPA_HOURS_ATTEMPTED,
        SHRTGPA.SHRTGPA_HOURS_EARNED as SHRTGPA_HOURS_EARNED,
        SHRTGPA.SHRTGPA_GPA_HOURS as SHRTGPA_GPA_HOURS,
        SHRTGPA.SHRTGPA_GPA as SHRTGPA_GPA,
        SHRTGPA.SHRTGPA_QUALITY_POINTS as SHRTGPA_QUALITY_POINTS,
        SHRTGPA.SHRTGPA_HOURS_PASSED as SHRTGPA_HOURS_PASSED,
        SHRLGPA.SHRLGPA_PIDM as SHRLGPA_PIDM,
        SHRLGPA.SHRLGPA_LEVL_CODE as SHRLGPA_LEVL_CODE,
        SHRLGPA.SHRLGPA_GPA_TYPE_IND as SHRLGPA_GPA_TYPE_IND,
        SHRLGPA.SHRLGPA_HOURS_ATTEMPTED as SHRLGPA_HOURS_ATTEMPTED,
        SHRLGPA.SHRLGPA_HOURS_EARNED as SHRLGPA_HOURS_EARNED,
        SHRLGPA.SHRLGPA_GPA_HOURS as SHRLGPA_GPA_HOURS,
        SHRLGPA.SHRLGPA_GPA as SHRLGPA_GPA,
        SHRLGPA.SHRLGPA_QUALITY_POINTS as SHRLGPA_QUALITY_POINTS,
        trunc(SHRTGPA.SHRTGPA_GPA,3) as SHRTGPA_SEMESTER_GPA,
        trunc(SHRLGPA.SHRLGPA_GPA,3) as SHRLGPA_CUMULATIVE_GPA

    FROM
        SHRTGPA SHRTGPA

        LEFT OUTER JOIN SHRLGPA SHRLGPA ON SHRLGPA.SHRLGPA_PIDM = SHRTGPA.SHRTGPA_PIDM
            AND SHRLGPA.SHRLGPA_GPA_TYPE_IND = 'I'
            AND SHRLGPA.SHRLGPA_LEVL_CODE = SHRTGPA.SHRTGPA_LEVL_CODE
        LEFT OUTER JOIN SFRTHST SFRTHST ON SFRTHST.SFRTHST_PIDM = SHRTGPA.SHRTGPA_PIDM
            AND SFRTHST.SFRTHST_TERM_CODE = SHRTGPA.SHRTGPA_TERM_CODE
            AND SFRTHST.SFRTHST_SURROGATE_ID = (SELECT MAX(SFRTHST_SURROGATE_ID)
                                               FROM SFRTHST SFRTHSTX
                                               WHERE SFRTHSTX.SFRTHST_PIDM = SFRTHST.SFRTHST_PIDM
                                               AND SFRTHSTX.SFRTHST_TERM_CODE = SFRTHST.SFRTHST_TERM_CODE)

    WHERE
        SHRTGPA.SHRTGPA_GPA_TYPE_IND = 'I'
    ),

SAAADMS as
(

    SELECT
        SARAPPD.SARAPPD_PIDM as SARAPPD_PIDM,
        SARAPPD.SARAPPD_TERM_CODE_ENTRY as SARAPPD_TERM_CODE_ENTRY,
        SARAPPD.SARAPPD_APPL_NO as SARAPPD_APPL_NO,
        SARAPPD.SARAPPD_SEQ_NO as SARAPPD_SEQ_NO,
        SARAPPD.SARAPPD_APDC_DATE as SARAPPD_APDC_DATE,
        SARAPPD.SARAPPD_APDC_CODE as SARAPPD_APDC_CODE,
        SARAPPD.SARAPPD_MAINT_IND as SARAPPD_MAINT_IND,
        SARAPPD.SARAPPD_ACTIVITY_DATE as SARAPPD_ACTIVITY_DATE,
        SARAPPD.SARAPPD_USER as SARAPPD_USER,
        SARAPPD.SARAPPD_DATA_ORIGIN as SARAPPD_DATA_ORIGIN,
        SARAPPD.SARAPPD_SURROGATE_ID as SARAPPD_SURROGATE_ID,
        SARAPPD.SARAPPD_VERSION as SARAPPD_VERSION,
        SARAPPD.SARAPPD_USER_ID as SARAPPD_USER_ID,
        SARAPPD.SARAPPD_VPDI_CODE as SARAPPD_VPDI_CODE,
        SARAPPD.SARAPPD_GUID as SARAPPD_GUID,
        SARAPPD.SARAPPD_DFE_ADMN_DECN_GUID as SARAPPD_DFE_ADMN_DECN_GUID

    FROM
        SARAPPD SARAPPD

    WHERE
        SARAPPD.SARAPPD_SEQ_NO = (SELECT MAX(SARAPPD_SEQ_NO)
                                 FROM SARAPPD SARAPPDX
                                 WHERE SARAPPDX.SARAPPD_PIDM = SARAPPD.SARAPPD_PIDM)
        AND SARAPPD.SARAPPD_APPL_NO = (SELECT MAX(SARAPPD_APPL_NO)
                                 FROM SARAPPD SARAPPDX
                                 WHERE SARAPPDX.SARAPPD_PIDM = SARAPPD.SARAPPD_PIDM)
    ),

ROAHSCH as
(
    SELECT
        SORHSCH.SORHSCH_PIDM,
        SORHSCH.SORHSCH_SBGI_CODE as SGBI_CODE,
        SORHSCH.SORHSCH_GRADUATION_DATE,
        SORHSCH.SORHSCH_GPA,
        SORHSCH.SORHSCH_TRANS_RECV_DATE,
        SORHSCH.SORHSCH_SURROGATE_ID,
        f_get_desc_fnc('STVSBGI', SORHSCH_SBGI_CODE, 30) as SORHSCH_SGBI_DESC        

    FROM
        SORHSCH SORHSCH
    ),

SOAPCOL as
(
    SELECT
        SORPCOL.SORPCOL_PIDM,
        SORPCOL.SORPCOL_SBGI_CODE,
        SORPCOL.SORPCOL_TRANS_RECV_DATE,
        SORPCOL.SORPCOL_TRANS_REV_DATE,
        SORPCOL.SORPCOL_OFFICIAL_TRANS,
        SORPCOL.SORPCOL_ADMR_CODE,
        SORPCOL.SORPCOL_ACTIVITY_DATE,
        SORPCOL.SORPCOL_DATA_ORIGIN,
        SORPCOL.SORPCOL_USER_ID,
        SORPCOL.SORPCOL_SURROGATE_ID,
        SORPCOL.SORPCOL_VERSION,
        SORPCOL.SORPCOL_VPDI_CODE,
        SORPCOL.SORPCOL_GUID,
        SORPCOL.SORPCOL_GPA,
        f_get_desc_fnc('STVSBGI', SORPCOL.SORPCOL_SBGI_CODE, 30) as SORPCOL_SGBI_DESC,
        CASE
          WHEN SORPCOL.SORPCOL_ADMR_CODE IS NULL THEN ''
            ELSE F_GET_DESC_FNC('STVADMR', SORPCOL.SORPCOL_ADMR_CODE, 30)
              END AS SORPCOL_ADMR_DESC        

    FROM
        SORPCOL SORPCOL

    WHERE
        SORPCOL.SORPCOL_SURROGATE_ID = (SELECT MAX(SORPCOL_SURROGATE_ID)
                                       FROM SORPCOL SORPCOLX
                                       WHERE SORPCOLX.SORPCOL_PIDM = SORPCOL.SORPCOL_PIDM)
    ),

SHADEGR as
(
    SELECT
        SHRDGMR_PIDM,
        SHRDGMR_SEQ_NO,
        SHRDGMR_DEGC_CODE,
        SHRDGMR_DEGS_CODE,
        SHRDGMR_LEVL_CODE,
        SHRDGMR_COLL_CODE_1,
        SHRDGMR_MAJR_CODE_1,
        SHRDGMR_APPL_DATE,
        SHRDGMR_GRAD_DATE,
        SHRDGMR_ACYR_CODE_BULLETIN,
        SHRDGMR_ACYR_CODE,
        SHRDGMR_TERM_CODE_GRAD,
        SHRDGMR_TERM_CODE_STUREC,
        f_get_desc_fnc('STVDEGS', SHRDGMR_DEGS_CODE, 30) as SHRDGMR_DEGS_DESC,
        f_get_desc_fnc('STVDEGC', SHRDGMR_DEGC_CODE, 30) as SHRDGMR_DEGC_DESC,
        f_get_desc_fnc('STVLEVL', SHRDGMR_LEVL_CODE, 30) as SHRDGMR_LEVL_DESC,
        f_get_desc_fnc('STVMAJR', SHRDGMR_MAJR_CODE_1, 30) as SHRDGMR_MAJR_DESC

   FROM
        SHRDGMR SHRDGMR
   ),
   
DATA_VIEW_1 as
(
    select
        STVTERM_CODE as Term_Code,
        STVTERM_DESC as Semester,
        SPRIDEN_PIDM,
        SPRIDEN_ID as BANNER_ID,
        SPRIDEN_LAST_NAME as LNAME,
        SPRIDEN_FIRST_NAME as FNAME,
        SPRIDEN_MI as MI,
        SPBPERS_PREF_FIRST_NAME as PREF_NAME,
        SPRIDEN_LEGAL_NAME as Student,
        GORADID_ADDITIONAL_ID as SUID,
        GOREMAL_EMAIL_ADDRESS as Email,
        SPBPERS_SEX as SEX_CODE,
        SPBPERS_ETHN_CDE as Ethn_Code,
        f_get_desc_fnc('STVETHN', SPBPERS_ETHN_CDE, 30) as Ethnicity,
        CASE
          WHEN SPBPERS_ETHN_CDE IN (2,3,4,5,6,7,9,10) THEN 'Y'
            ELSE 'N'
              END AS SPBPERS_SICAS_HISP_ORIGIN,
        GORPRAC_RACE_CDE,
        GORRACE_RACE_CDE,
        GORRACE_DESC,
        STVTERM_START_DATE,
        STVTERM_END_DATE,
        SPRIDEN_SEARCH_LAST_NAME as LNAME_SORT,
        SPRIDEN_SEARCH_FIRST_NAME as FNAME_SORT

from
        STVTERM STVTERM

        LEFT OUTER JOIN SPAIDEN SPRIDEN ON SPRIDEN.SPRIDEN_PIDM IS NOT NULL
        LEFT OUTER JOIN SOREMAL GOREMAL ON GOREMAL.GOREMAL_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN GOARACE GORPRAC ON GORPRAC.GORPRAC_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN SPAPERS SPBPERS ON SPBPERS.SPBPERS_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN STVETHN STVETHN on STVETHN.STVETHN_CODE = SPBPERS.SPBPERS_ETHN_CDE

-- RE-ENABLE SECTION
where
        EXISTS(SELECT *
                  FROM SFRSTCR
                  WHERE SFRSTCR_PIDM = SPRIDEN_PIDM
                  AND SFRSTCR_RSTS_CODE = 'RE'
                  AND SFRSTCR_TERM_CODE = STVTERM_CODE)
        AND STVTERM_CODE = '&T'
    ),

DATA_VIEW_2 as
(
    SELECT
        SPRIDEN_PIDM as SPRIDEN_PIDM,
        SPRADDR_ATYP_CODE as ATYP_CODE,
        SPRADDR_ATYP_DESC as ATYP_DESC,
        SPRADDR.SPRADDR_STREET_LINE1,
        SPRADDR.SPRADDR_STREET_LINE2,
        SPRADDR.SPRADDR_STREET_LINE3,
        SPRADDR.SPRADDR_CITY,
        SPRADDR.SPRADDR_STAT_CODE,
        SPRADDR.SPRADDR_ZIP,
        SPRADDR.SPRADDR_CNTY_DESC as CNTY_DESC,
        SPRADDR.SPRADDR_SEQNO,
        SPRADDR.SPRADDR_FROM_DATE,
        SPRADDR.SPRADDR_TO_DATE,
        SPRTELE_TELE_DESC,
        SPRTELE_TELE_CODE,
        SPRTELE.SPRTELE_PHONE_AREA as SPRTELE_PHONE_AREA,
        SPRTELE.SPRTELE_PHONE_NUMBER as SPRTELE_PHONE_NUMBER
        
   FROM
        SPAIDEN SPRIDEN
        LEFT OUTER JOIN TUIADDR SPRADDR ON SPRADDR.SPRADDR_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN SPATELE SPRTELE ON SPRTELE.SPRTELE_PIDM = SPRIDEN.SPRIDEN_PIDM
   ),
    
DATA_VIEW_3 as
(
    SELECT
        STVTERM_CODE as Term_Code,
        STVTERM_DESC as Semester,
        SGBSTDN_PIDM,
        SGBSTDN_STYP_CODE as STYP_Code,
        SGBSTDN_LEVL_CODE as Student_Level,
        SGBSTDN_CLAS_CODE as Class_Code,
        SGBSTDN_MAJR_CODE_1 as Major_Code,
        SGBSTDN_MAJR_CODE_MINR_1 as Minor_Code,
        SGBSTDN_MAJR_CODE_MINR_1_2 as Minor_Code_2,
        SGBSTDN_MAJR_CODE_CONC_1 as Conc_Code,
        SGBSTDN_DEGC_CODE_1 as Degree_Code,

        SGBSTDN_STYP_CODE as STYP_Desc,
        SGBSTDN_LEVL_DESC as Class_Level,
        SGBSTDN_CLAS_DESC as Class_Desc,
        SGBSTDN_MAJR_DESC as Program_of_Study,
        SGBSTDN_MINR_1_DESC as Minor_Desc,
        SGBSTDN_MINR_1_2_DESC as Minor_Desc_2,
        SGBSTDN_CONC_DESC as Conc_Desc,
        SGBSTDN_DEGC_DESC as Degree_Program,
        SGBSTDN_EXP_GRAD_DATE as ExpGradDate

from
        STVTERM STVTERM
        LEFT OUTER JOIN SGASTDN SGBSTDN ON SGBSTDN.SGBSTDN_PIDM IS NOT NULL
        LEFT OUTER JOIN SHAGPAR SHAGPAR ON SHAGPAR.SHRTGPA_PIDM = SGBSTDN_PIDM
            AND SHAGPAR.SHRTGPA_TERM_CODE = STVTERM_CODE
            AND SHAGPAR.SHRTGPA_LEVL_CODE = SGBSTDN_LEVL_CODE
            AND SHAGPAR.SHRLGPA_LEVL_CODE = SGBSTDN_LEVL_CODE

WHERE

        EXISTS(SELECT *
                  FROM SFRSTCR
                  WHERE SFRSTCR_PIDM = SGBSTDN_PIDM
                  AND SFRSTCR_RSTS_CODE = 'RE'
                  AND SFRSTCR_TERM_CODE = STVTERM_CODE)
                  
        AND STVTERM_CODE = '&T'
        AND SGBSTDN_STST_CODE = 'AS'
        AND SGBSTDN_STYP_CODE <> 'X'
        AND SGBSTDN_MAJR_CODE_1 NOT IN ('SUS')
        AND SGBSTDN_TERM_CODE_EFF = fy_sgbstdn_eff_term(SGBSTDN_PIDM, STVTERM_CODE)
),

DATA_VIEW_4 AS
(
    SELECT
        SGRADVR_PIDM,
        SGRADVR_ADVR_NAME as Advisor,
        SGRADVR_ADVR_DESC as Advisor_Type
FROM
        SGAADVR SGRADVR
        
-- PIVOT UNAVAILBE DUE TO MULTIPLE ADVISORS. 

WHERE
        SGRADVR.SGRADVR_PRIM_IND = 'Y'
),

DATA_VIEW_5 as
(
    SELECT
        SARAPPD.SARAPPD_PIDM,
        SARAPPD.SARAPPD_TERM_CODE_ENTRY,
        SARAPPD.SARAPPD_APPL_NO,
        SARAPPD.SARAPPD_SEQ_NO,
        SARAPPD.SARAPPD_APDC_DATE,
        SARAPPD.SARAPPD_APDC_CODE,
        SARAPPD.SARAPPD_MAINT_IND,
        SORHSCH.SORHSCH_PIDM,
        SORHSCH.SORHSCH_GRADUATION_DATE as HS_GRADUATION_DATE,
        SORHSCH.SORHSCH_GPA as HS_GPA,
        SORHSCH.SORHSCH_TRANS_RECV_DATE as TRANS_RECV_DATE,
        SORHSCH.SORHSCH_SGBI_DESC as HIGH_SCHOOL,
        SORPCOL.SORPCOL_PIDM,
        SORPCOL.SORPCOL_SBGI_CODE,
        SORPCOL_SGBI_DESC,
        SORPCOL_TRANS_RECV_DATE,
        SORPCOL_TRANS_REV_DATE,
        SORPCOL_OFFICIAL_TRANS,
        SORPCOL_ADMR_CODE,
        SORPCOL_ADMR_DESC,
        SORPCOL_ACTIVITY_DATE,
        SORPCOL_DATA_ORIGIN,
        SORPCOL_USER_ID,
        SORPCOL_SURROGATE_ID,
        SORPCOL_VERSION,
        SORPCOL_VPDI_CODE,
        SORPCOL_GUID,
        SORPCOL_GPA
        
FROM
        STVTERM STVTERM
        LEFT OUTER JOIN SPAIDEN SPRIDEN ON SPRIDEN_PIDM IS NOT NULL
        -- AP/AC STUDENTS
        LEFT OUTER JOIN SAAADMS SARAPPD ON SARAPPD.SARAPPD_PIDM = SPRIDEN.SPRIDEN_PIDM
        -- HIGH SCHOOL INFORMATION
        LEFT OUTER JOIN ROAHSCH SORHSCH ON SORHSCH.SORHSCH_PIDM = SPRIDEN.SPRIDEN_PIDM
        -- HIGH SCHOOL TRANSCRIPTS
        LEFT OUTER JOIN SOAPCOL SORPCOL ON SORPCOL.SORPCOL_PIDM = SPRIDEN.SPRIDEN_PIDM
             AND SORPCOL.SORPCOL_ADMR_CODE = 'HST1'

WHERE
        STVTERM_CODE = '&T'
        AND SARAPPD_TERM_CODE_ENTRY = STVTERM_CODE
        AND SARAPPD_APDC_CODE IN ('AP', 'AC')
),

DATA_VIEW_6 as
(
    SELECT
        SHRDGMR_PIDM,
        SHRDGMR_SEQ_NO,
        SHRDGMR_DEGC_CODE,
        SHRDGMR_DEGS_CODE,
        SHRDGMR_LEVL_CODE,
        SHRDGMR_COLL_CODE_1,
        SHRDGMR_MAJR_CODE_1,
        SHRDGMR_APPL_DATE,
        SHRDGMR_GRAD_DATE,
        SHRDGMR_ACYR_CODE_BULLETIN,
        SHRDGMR_ACYR_CODE,
        SHRDGMR_TERM_CODE_GRAD,
        SHRDGMR_TERM_CODE_STUREC,
        SHRDGMR_DEGS_DESC,
        SHRDGMR_DEGC_DESC,
        SHRDGMR_LEVL_DESC,
        SHRDGMR_MAJR_DESC
        
FROM
        SHADEGR SHRDGMR
   )

SELECT
        *

-- PII
FROM
        DATA_VIEW_1 MAIN1
-- Telephone, Phone Number, & Addressbook
        LEFT OUTER JOIN DATA_VIEW_2 MAIN2 ON MAIN2.SPRIDEN_PIDM = MAIN1.SPRIDEN_PIDM

-- Registrar & Matriculation
        LEFT OUTER JOIN DATA_VIEW_3 MAIN3 ON MAIN3.SGBSTDN_PIDM = MAIN1.SPRIDEN_PIDM
        
-- Student Advising
--        LEFT OUTER JOIN DATA_VIEW_4 MAIN4 ON MAIN4.SGRADVR_PIDM = MAIN1.SPRIDEN_PIDM

-- Transfer and Admissions        
        LEFT OUTER JOIN DATA_VIEW_5 MAIN4 ON MAIN4.SARAPPD_PIDM = MAIN1.SPRIDEN_PIDM        

-- Degree Atriculation
        LEFT OUTER JOIN DATA_VIEW_6 MAIN4 ON MAIN4.SHRDGMR_PIDM = MAIN1.SPRIDEN_PIDM

-- MEASURES
-- Gender Measures
PIVOT (
      COUNT (1) FOR SEX_CODE IN ('M', 'F')
)      

-- Race IPED data
PIVOT (
      COUNT (1) FOR GORRACE_RACE_CDE IN (10, 20, 30, 40, 50, 60, 70)
)

-- Race IPED Measure
PIVOT (
      COUNT (1) FOR GORRACE_DESC IN('American Indian', 'Asian', 'Asian/Pacific Islander', 'Black/African American', 'Hawaiian/Pacific Islander', 'Hispanic', 'White')
)

-- Graduate Level Measure
PIVOT (
      COUNT (1) FOR STUDENT_LEVEL IN ('UG', 'GR')
)

-- Class Level Measure
PIVOT (
      COUNT (1) FOR CLASS_CODE IN ('FR', 'JR', 'S5', 'SO', 'SR', 'AG', 'BG')
)

-- DEGREE COUNT
PIVOT (
      COUNT (1) FOR SHRDGMR_DEGC_CODE IN ('AAS', 'BLA', 'BS', 'CAS', 'CGS', 'MF', 'MLA', 'MPS', 'MS', 'ND', 'PHD')
)

/*
pivot (
      count (1) for  in ()
)
*/
-- DUMMY
/*
pivot (
      count (1) for  in ()
)
 */
--$addfilter

--$beginorder

WHERE

-- ENROLLMENT CHECK
/*
      EXISTS (
             SELECT * 
             FROM SFRSTCR
             LEFT OUTER JOIN DATA_VIEW_1 MAIN1 ON SPRIDEN_PIDM IS NOT NULL
             WHERE SFRSTCR_PIDM = MAIN1.SPRIDEN_PIDM
             AND SFRSTCR_TERM_CODE = '&T'
             AND SFRSTCR_RSTS_CODE IN ('RE', 'RW')
             )
*/    

-- THIRD WEEK ENROLLMENT CHECK
      EXISTS (
             SELECT * 
             FROM SFRSTCR
             LEFT OUTER JOIN DATA_VIEW_1 MAIN1 ON MAIN1.SPRIDEN_PIDM IS NOT NULL
             WHERE SFRSTCR_PIDM = MAIN1.SPRIDEN_PIDM
             AND SFRSTCR_TERM_CODE = '&T'
             AND SFRSTCR_RSTS_CODE IN ('RE', 'RW')
             AND SFRSTCR_RSTS_DATE <= TO_DATE(TO_CHAR(STVTERM_START_DATE, 'MM/DD'), 'MM/DD')+21)
ORDER BY
        LNAME_SORT,
        FNAME_SORT

--$endorder
